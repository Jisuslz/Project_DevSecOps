apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jtl-reporter-db
  namespace: jtl-reporter
spec:
  replicas: 1
  serviceName: jtl-reporter-db
  selector:
    matchLabels:
      app: jtl-reporter-db
  template:
    metadata:
      labels:
        app: jtl-reporter-db
    spec:
      containers:
        - name: postgres
          image: timescale/timescaledb-ha:pg16.4-ts2.16.1-all
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_DB
          volumeMounts:
            - name: jtl-data-volume
              mountPath: /var/lib/postgresql/data
              subPath: postgres
          lifecycle:
            postStart:
              exec:
                command:
                  - "bash"
                  - "-c"
                  - >
                    sleep 20;
                    db_check=$(psql -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "select * from jtl.users limit 1;" || true);
                    if [ -z "$db_check" ]; then
                      wget -O /var/lib/postgresql/data/schema.sql https://raw.githubusercontent.com/ludeknovy/jtl-reporter/main/db/schema.sql;
                      chown postgres:postgres /var/lib/postgresql/data/schema.sql;
                      psql -U "$POSTGRES_USER" -d "$POSTGRES_DB" -a -f /var/lib/postgresql/data/schema.sql;
                    else
                      echo "Database already initialized.";
                    fi
  volumeClaimTemplates:
    - metadata:
        name: jtl-data-volume
      spec:
        storageClassName: standard
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: jtl-reporter-db
  namespace: jtl-reporter
spec:
  selector:
    app: jtl-reporter-db
  ports:
    - protocol: TCP
      port: 5432
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: jtl-reporter
type: Opaque
data:
  POSTGRES_USER: cG9zdGdyZXM=           # "postgres" en Base64
  POSTGRES_PASSWORD: c2VjdXJlX3Bhc3M=   # "secure_pass" en Base64
  POSTGRES_DB: anRsX3JlcG9ydA==         # "jtl_report" en Base64
