---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: jtl-reporter-dev
  namespace: argocd
spec:
  project: umanizales
  source:
    repoURL: https://github.com/Jisuslz/Project_DevSecOps.git  # Actualiza con la URL de tu repo
    path: charts/jtl-reporter  # Aseg√∫rate de que el path sea correcto
    targetRevision: HEAD
  destination:
    server: https://kubernetes.default.svc
    namespace: dev  # El namespace donde quieres desplegar
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jtl-reporter-db
  namespace: dev
spec:
  serviceName: jtl-reporter-db
  replicas: 1
  selector:
    matchLabels:
      app: jtl-reporter
      tier: db
  template:
    metadata:
      labels:
        app: jtl-reporter
        tier: db
    spec:
      containers:
        - name: db
          image: timescale/timescaledb-ha:latest
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_HOST_AUTH_METHOD
              value: "trust"
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
          readinessProbe:
            exec:
              command: ["pg_isready", "-U", "postgres"]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: jtl-reporter-db
  namespace: dev
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: jtl-reporter
    tier: db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jtl-reporter-fe
  namespace: dev
  labels:
    app: jtl-reporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jtl-reporter
      tier: fe
  template:
    metadata:
      labels:
        app: jtl-reporter
        tier: fe
    spec:
      containers:
        - name: fe
          image: novyl/jtl-reporter-fe:v5.0.2
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          env:
            - name: BACKEND_HOST
              value: "jtl-reporter-be"
            - name: BACKEND_PORT
              value: "5000"
          envFrom:
            - configMapRef:
                name: jtl-reporter-config
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: nginx-config
          configMap:
            name: jtl-reporter-config
      readinessProbe:
        httpGet:
          path: /
          port: 80
        initialDelaySeconds: 5
        periodSeconds: 10
      livenessProbe:
        httpGet:
          path: /
          port: 80
        initialDelaySeconds: 5
        periodSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jtl-reporter-be
  namespace: dev
  labels:
    app: jtl-reporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jtl-reporter
      tier: be
  template:
    metadata:
      labels:
        app: jtl-reporter
        tier: be
    spec:
      containers:
        - name: be
          image: novyl/jtl-reporter-be:v5.0.2
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5000
          env:
            - name: DB_HOST
              value: "jtl-reporter-db"
            - name: JWT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: jtl-reporter-secrets
                  key: JWT_TOKEN
            - name: JWT_TOKEN_LOGIN
              valueFrom:
                secretKeyRef:
                  name: jtl-reporter-secrets
                  key: JWT_TOKEN_LOGIN
          envFrom:
            - configMapRef:
                name: jtl-reporter-config
      readinessProbe:
        httpGet:
          path: /health
          port: 5000
        initialDelaySeconds: 5
        periodSeconds: 10
      livenessProbe:
        httpGet:
          path: /health
          port: 5000
        initialDelaySeconds: 5
        periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: jtl-reporter-fe
  namespace: dev
spec:
  type: ClusterIP
  ports:
    - port: 2020
      targetPort: 80
  selector:
    app: jtl-reporter
    tier: fe
---
apiVersion: v1
kind: Service
metadata:
  name: jtl-reporter-be
  namespace: dev
spec:
  type: ClusterIP
  ports:
    - port: 5000
      targetPort: 5000
  selector:
    app: jtl-reporter
    tier: be
---
apiVersion: batch/v1
kind: Job
metadata:
  name: jtl-reporter-migration
  namespace: dev
spec:
  template:
    spec:
      containers:
        - name: migration
          image: novyl/jtl-reporter-be:v5.0.2
          command: ["npm", "run", "migrate", "up"]
          env:
            - name: DATABASE_URL
              value: "postgres://postgres@jtl-reporter-db/jtl_report"
            - name: OPT_OUT_ANALYTICS
              value: "true"
      restartPolicy: OnFailure
